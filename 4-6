// All material is licensed under the Apache License Version 2.0, January 2004
// http://www.apache.org/licenses/LICENSE-2.0

// Declare an untyped and typed constant and display their values.
//
// Multiply two literal constants into a typed variable and display the value.
package main

// Add imports.
import "fmt"

const (
// Declare a constant named server of kind string and assign a value.
	server = "124.53.24.123"
// Declare a constant named port of type integer and assign a value.
	port int = 8080
)

func main() {

	// Display the value of both server and port.
	fmt.Println(server)
	fmt.Println(port)
	// Divide a constant of kind integer and kind floating point and
	// assign the result to a variable.
	distanceInKm := 3455 / 1000.0
	// Display the value of the variable.
	fmt.Println(distanceInKm)
}


#5
// All material is licensed under the Apache License Version 2.0, January 2004
// http://www.apache.org/licenses/LICENSE-2.0

// Declare a struct type to maintain information about a user. Declare a function
// that creates value of and returns pointers of this type and an error value. Call
// this function from main and display the value.

// Make a second call to your function but this time ignore the value and just test
// the error value.
package main

// Add imports.
	import "fmt"
// Declare a type named user.
type user struct{
	name string
	telephone string
	}
// Declare a function that creates user type values and returns a pointer
// to that value and an error value of nil.
func User()(*user,error){
	return &user{"Alina", "+79003456789"}, nil
}

func main() {

	// Use the function to create a value of type user. Check
	// the error being returned.
	u, err := User()
	if err != nil {
		fmt.Println(err)
		return
	}
	// Display the value that the pointer points to.
	fmt.Println(*u)
	// Call the function again and just check the error.
	_, err = User()
	if err != nil {
		fmt.Println(err)
		return
	}
}


#6
// All material is licensed under the Apache License Version 2.0, January 2004
// http://www.apache.org/licenses/LICENSE-2.0

// Declare an array of 5 strings with each element initialized to its zero value.
//
// Declare a second array of 5 strings and initialize this array with literal string
// values. Assign the second array to the first and display the results of the first array.
// Display the string value and address of each element.
package main

// Add imports.
import "fmt"

func main() {

	// Declare an array of 5 strings set to its zero value.
	var array1 [5]string

	// Declare an array of 5 strings and pre-populate it with names.
	array2 := [5]string{"A", "B", "C", "D", "E"}

	// Assign the populated array to the array of zero values.
	array1 = array2

	// Iterate over the first array declared.
	// Display the string value and address of each element.
	for i, str := range array1{
		fmt.Println(str, &array1[i])
	}
}
